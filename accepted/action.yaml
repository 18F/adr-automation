name: ADR accepted
description: |
  When an architectural decision record is accepted, opens a pull request to
  memorialize the decision in the repo.

inputs:
  label:
    description: |
      The name of the issue label that indicates the ADR has been accepted.
      Defaults to "ADR: accepted". This value is case sensitive!
    default: "ADR: accepted"
  path:
    description: |
      The path in your repo where ADRs should be written. Defaults to
      docs/architecture/decisions/
    default: docs/architecture/decisions/
  pr-label:
    description: |
      The label to apply to the created pull reqeust. Set to true to re-use the
      issue label, false to not label the pull request, or a string to set a
      custom label.
    default: true
  repo-token:
    description: |
      A GitHub token with permission to read and create pull requests on your
      repository.
    required: true

runs:
  using: composite

  steps:
    - name: check for tags
      if: ${{ !contains(github.event.issue.labels.*.name, inputs.label )}}
      shell: bash
      run: exit 0

    - name: checkout main branch
      uses: actions/checkout@v3
      with:
        ref: main

    - name: get ADR number
      id: next
      shell: bash
      run: |
        mkdir -p ${{ inputs.path }}
        LAST_ADR=$(ls ${{ inputs.path }}/*.md | grep -Eo "/[0-9]+-" | sort | tail -n1 | grep -Eo "[0-9]+")
        LAST_ADR=$(echo "$LAST_ADR" | sed -E 's/^0+//')
        NEXT_ADR=$(($LAST_ADR + 1))
        NEXT_ADR=$(printf "%04i" "$NEXT_ADR")
        echo "number=$NEXT_ADR" >> "$GITHUB_OUTPUT"

    - name: write the ADR
      shell: bash
      run: |
        SLUG=$(echo "${{ github.event.issue.title }}" | tr A-Z a-z)
        SLUG=$(echo "$SLUG" | iconv -c -t ascii//TRANSLIT)
        SLUG=$(echo "$SLUG" | sed -E 's/[^a-z0-9]+/-/g' | sed -E 's/-+/-/g' | sed -E 's/^-+|-+$//g')

        FILENAME="${{ inputs.path }}/${{ steps.next.outputs.number }}-$SLUG.md"

        DATE=$(date -I)

        echo "# ${{ github.event.issue.title }}" > $FILENAME
        echo "" >> $FILENAME
        echo "Date: $DATE" >> $FILENAME
        echo "" >> $FILENAME
        echo "### Status" >> $FILENAME
        echo "" >> $FILENAME
        echo "Accepted" >> $FILENAME
        echo "" >> $FILENAME
        echo "${{ github.event.issue.body  }}" >> $FILENAME

    - name: branch, commit, and open PR
      shell: bash
      env:
        GITHUB_TOKEN: ${{ inputs.repo-token }}
      run: |
        BRANCH="adr/auto/${{ steps.next.outputs.number }}"
        git config --global user.email "tts@gsa.gov"
        git config --global user.name "TTS ADR automation"
        git checkout -b $BRANCH
        git add ${{ inputs.path }}/*.md
        git commit -m "add ADR ${{ steps.next.outputs.number }}: ${{ github.event.issue.title }}"
        git push -f origin $BRANCH
        PR_LABEL = "${{ inputs.pr-label == true && inputs.label || inputs.pr-label }}"
        gh pr create \
          --title "Add ADR ${{ steps.next.outputs.number }} to the repo" \
          ${{ inputs.pr-label == false && '' || '--label $PR_LABEL \' }}
          --body "This pull request was opened automatically because #${{ github.event.issue.number }} was closed after being marked as an approved ADR. It contains a markdown file capturing the ADR body at the time the issue was closed. Please verify that the markdown is correct before merging!" || true
        gh pr merge $BRANCH --auto --squash || true
